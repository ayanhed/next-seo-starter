# Project Structure Guide

## Main App Directory: [`src/app`](mdc:src/app)

- **Global layout**: [`layout.tsx`](mdc:src/app/layout.tsx) - Root layout with metadata and providers
- **App providers**: [`providers.tsx`](mdc:src/app/providers.tsx) - Client-side providers and instrumentation
- **Global styles**: [`globals.css`](mdc:src/app/globals.css) - Tailwind CSS and design tokens
- **Root page**: [`page.tsx`](mdc:src/app/page.tsx) - Homepage
- **Offline page**: [`offline/page.tsx`](mdc:src/app/offline/page.tsx) - PWA offline fallback
- **PWA service worker**: [`sw.ts`](mdc:src/app/sw.ts) - Service worker entry point
- **Metadata routes**:
  - [`manifest.ts`](mdc:src/app/manifest.ts) - PWA manifest
  - [`robots.ts`](mdc:src/app/robots.ts) - Robots.txt
  - [`sitemap.ts`](mdc:src/app/sitemap.ts) - XML sitemap

## Route Groups

- **`(auth)`**: Authentication pages (`login/`, `register/`)
- **`(main)`**: Main app pages (`r/[reg]/`, `search/`)

## Components Organization

### UI Primitive Components: [`src/components/ui`](mdc:src/components/ui)

- **Barrel exports**: [`index.ts`](mdc:src/components/ui/index.ts) - Centralized exports
- **Only primitive components** should be created here
- **Import pattern**:

```ts
import { Button, Card } from "@/components/ui";
```

### Feature Components: [`src/components`](mdc:src/components)

- **Marketing components**: [`marketing/`](mdc:src/components/marketing) - Hero, FAQ, Features, etc.
- **App-specific components**: `Composer.tsx`, `PlateSearch.tsx`, `JsonLd.tsx`

## Configuration and Utilities

### App Configuration: [`src/config/app.ts`](mdc:src/config/app.ts)

- **Single source of truth** for app metadata, branding, and theme
- **Use `getCanonicalUrl(path)`** for absolute URLs
- **Read `appConfig`** for app name, description, base URL, etc.

### Utilities and Helpers: [`src/lib/`](mdc:src/lib)

- **SEO/Structured Data**: [`jsonld.ts`](mdc:src/lib/jsonld.ts) - JSON-LD helpers
- **Database**: [`prisma.ts`](mdc:src/lib/prisma.ts) - Prisma client
- **Authentication**: [`auth.ts`](mdc:src/lib/auth.ts), [`auth-client.ts`](mdc:src/lib/auth-client.ts)
- **Utilities**: [`utils.ts`](mdc:src/lib/utils.ts) - Common utilities

### Database: [`prisma/`](mdc:prisma)

- **Schema**: [`schema.prisma`](mdc:prisma/schema.prisma) - Database models
- **Migrations**: [`migrations/`](mdc:prisma/migrations) - Database migrations

## Public Assets: [`public/`](mdc:public)

- **PWA assets**: Icons, manifest, service worker
- **Default Open Graph image**: [`opengraph-image.jpg`](mdc:src/app/opengraph-image.jpg)

## Path Aliases and Imports

- **TypeScript path alias** `@/*` configured in [`tsconfig.json`](mdc:tsconfig.json)
- **Prefer `@/…` imports** over relative `../../…` paths
- **Import order**: external → alias (`@/…`) → relative

- Use `JsonLd` with helpers from `src/lib/jsonld.ts` on pages.
- Centralize URLs with `getCanonicalUrl` and metadata with `appConfig`.
- Keep metadata routes (`manifest`, `robots`, `sitemap`) in sync with `appConfig`.
